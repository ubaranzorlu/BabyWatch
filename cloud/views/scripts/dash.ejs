<script>
<% if(devices.length <= 0){ %>
    var lastDate = 0;
    var data = []
    var TICKINTERVAL = 1000
    let XAXISRANGE = 9000
    function getDayWiseTimeSeries(baseval, count, yrange) {
        var i = 0;
        while (i < count) {
            var x = baseval;
            var y = Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min;

            data.push({
                x, y
            });
            lastDate = baseval
            baseval += TICKINTERVAL;
            i++;
        }
    }

    getDayWiseTimeSeries(new Date('11 Feb 2017 GMT').getTime(), 10, {
        min: 10,
        max: 90
    })

    function getNewSeries(baseval, yrange) {
        var newDate = baseval + TICKINTERVAL;
        lastDate = newDate

        for(var i = 0; i< data.length - 10; i++) {
            // IMPORTANT
            // we reset the x and y of the data which is out of drawing area
            // to prevent memory leaks
            data[i].x = newDate - XAXISRANGE - TICKINTERVAL
            data[i].y = 0
        }
        
        data.push({
            x: newDate,
            y: Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min
        })
        
    }

    function resetData(){
        // Alternatively, you can also reset the data at certain intervals to prevent creating a huge series 
        data = data.slice(data.length - 10, data.length);
    }

    var options = {
        chart: {
            height: 350,
            type: 'area',
            animations: {
                enabled: true,
                easing: 'linear',
                dynamicAnimation: {
                    speed: 1000
                }
            },
            toolbar: {
                show: false
            },
            zoom: {
                enabled: false
            }
        },
        colors: ['#8a2387'],
        dataLabels: {
            enabled: false
        },
        stroke: {
            curve: 'smooth'
        },
        series: [{
            data: data
        }],
        markers: {
            size: 0
        },
        xaxis: {
            type: 'datetime',
            range: XAXISRANGE,
        },
        yaxis: {
            max: 100
        },
        legend: {
            show: false
        },
    }

    var chart = new ApexCharts(
        document.querySelector("#dev-status #chart"),
        options
    );

    chart.render();

    window.setInterval(function () {
        getNewSeries(lastDate, {
            min: 10,
            max: 90
        })
        chart.updateSeries([{
            data: data
        }])
    }, 1000);
    <% }else{ %>    
    $(document).ready(function(){
        var data = [[],[]];
        var options = {
        chart: {
            height: 350,
            type: 'area',
            animations: {
                enabled: true,
                easing: 'linear',
                dynamicAnimation: {
                    speed: 1000
                }
            },
            toolbar: {
                show: false
            },
            zoom: {
                enabled: false
            }
        },
        colors: ['#8a2387', '#00E396'],
        dataLabels: {
            enabled: false
        },
        stroke: {
            curve: 'smooth'
        },
        series: [{
            name: "Sound Captured",
            data: data[0]
        },{
            name: "Motion Captured",
            data: data[1]
        }],
        markers: {
            size: 0
        },
        xaxis: {
            type: 'datetime',
            range: 3540000,
        },
        yaxis: {
            max: 40
        },
        legend: {
            show: true
        },
        annotations : {
            points : []
        }
    }

    var chart = new ApexCharts(
        document.querySelector("#dev-status #chart"),
        options
    );

    chart.render();

    $.get('/dash/data/<%= devices[0].baby %>',series => {
        if(!series.err){
             series[0].forEach((serie,i) => {
                series[0][i].x = new Date(serie.x).getTime();
            });
             series[1].forEach((serie,i) => {
                series[1][i].x = new Date(serie.x).getTime();
            });
            series[2].forEach((serie,i) => {
                series[2][i].x = new Date(serie.x).getTime();
            });
            chart.updateSeries([{
                name: "Sound Captured",
                data: series[0]
            },{
                name: "Motion Captured",
                data: series[1]
            }]);
            chart.updateOptions({
                annotations: {
                    points: series[2]
                }
            });
        }else{
            alert(series.err);
        }
    });
    window.setInterval(function () {
        $.get('/dash/data/<%= devices[0].baby %>',series => {
            if(!series.err){
                series[0].forEach((serie,i) => {
                series[0][i].x = new Date(serie.x).getTime();
            });
             series[1].forEach((serie,i) => {
                series[1][i].x = new Date(serie.x).getTime();
            });
            series[2].forEach((serie,i) => {
                series[2][i].x = new Date(serie.x).getTime();
            });
                chart.updateSeries([{
                    name: "Sound Captured",
                    data: series[0]
                },{
                    name: "Motion Captured",
                    data: series[1]
                }]);
                chart.updateOptions({
          annotations: {
            points: series[2]
          }
        });
            series[0][49].x > 10 ? alert("Your Baby is crying!") : '';
            }else{
                alert(series.err);
            }
        });
    }, 10000);
    });    
    <% } %>
</script>